<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    ">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="400"/>
        <property name="maxIdle" value="400"/>
        <property name="minIdle" value="100"/>
        <property name="maxWaitMillis" value="5"/><!--由于session server在redis出问题之后可以将所有请求达到kv，所以这里可以快速返回-->
        <property name="testOnBorrow" value="false"/>
        <!--30分钟跑一次idle object eviction线程-->
        <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis1.ip}"/>
                    <constructor-arg name="port" value="${redis1.port}" type="int"/>
                    <constructor-arg name="name" value="${redis1.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis2.ip}"/>
                    <constructor-arg name="port" value="${redis2.port}" type="int"/>
                    <constructor-arg name="name" value="${redis2.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis3.ip}"/>
                    <constructor-arg name="port" value="${redis3.port}" type="int"/>
                    <constructor-arg name="name" value="${redis3.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis4.ip}"/>
                    <constructor-arg name="port" value="${redis4.port}" type="int"/>
                    <constructor-arg name="name" value="${redis4.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis5.ip}"/>
                    <constructor-arg name="port" value="${redis5.port}" type="int"/>
                    <constructor-arg name="name" value="${redis5.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis6.ip}"/>
                    <constructor-arg name="port" value="${redis6.port}" type="int"/>
                    <constructor-arg name="name" value="${redis6.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis7.ip}"/>
                    <constructor-arg name="port" value="${redis7.port}" type="int"/>
                    <constructor-arg name="name" value="${redis7.name}" />
                </bean>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis8.ip}"/>
                    <constructor-arg name="port" value="${redis8.port}" type="int"/>
                    <constructor-arg name="name" value="${redis8.name}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="redisDataSource" class="com.sogou.upd.passport.session.util.redis.RedisDataSource"></bean>

    <bean id="redisClientTemplate" class="com.sogou.upd.passport.session.util.redis.RedisClientTemplate"/>

    <!-- kv redis util definition -->
    <bean id="kvPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="200"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="50"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="false"/>
    </bean>


    <bean id="kvConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <property name="hostName" value="${passport.kv.url}"/>
        <property name="port" value="${passport.kv.port}"/>
        <constructor-arg index="0" ref="kvPoolConfig"/>
    </bean>
    <bean id="kvTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="kvConnectionFactory"/>
    <bean id="kvUtils" class=" com.sogou.upd.passport.session.util.KvUtil">
        <property name="kvPrefix" value="${kv.prefix}"/>
        <property name="kvTemplate" ref="kvTemplate"/>
    </bean>

    <!-- cache redis util definition -->
    <bean id="redisUtils" class="com.sogou.upd.passport.session.util.redis.RedisUtils">
        <property name="redisTemplate" ref="cacheTemplate"/>
    </bean>
    <bean id="cacheTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="cacheConnectionFactory"/>
    <bean id="cacheConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <property name="hostName" value="${passport.redis.url}"/>
        <property name="port" value="${passport.redis.port}"/>
        <constructor-arg index="0" ref="cachePoolConfig"/>
    </bean>
    <bean id="cachePoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1600"/>
        <property name="maxIdle" value="300"/>
        <property name="minIdle" value="300"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="false"/>
        <!--30分钟跑一次idle object eviction线程-->
        <property name="timeBetweenEvictionRunsMillis" value="180000" />
        <!-- 解决java.net.SocketTimeoutException: connect timed out-->
        <property name="lifo" value="false" />
    </bean>

    <!-- new sgid redis utils-->
    <bean id="newSgidRedisUtils" class="com.sogou.upd.passport.session.util.redis.RedisUtils">
        <property name="redisTemplate" ref="newSgidTemplate"/>
    </bean>
    <bean id="newSgidTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="newSgidConnectionFactory"/>
    <bean id="newSgidConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <property name="hostName" value="${passport.new.sgid.redis.url}"/>
        <property name="port" value="${passport.new.sgid.redis.port}"/>
        <constructor-arg index="0" ref="newSgidPoolConfig"/>
    </bean>
    <bean id="newSgidPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1600"/>
        <property name="maxIdle" value="400"/>
        <property name="minIdle" value="400"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="false"/>
        <!--30分钟跑一次idle object eviction线程-->
        <property name="timeBetweenEvictionRunsMillis" value="180000" />
        <!-- 解决java.net.SocketTimeoutException: connect timed out-->
        <property name="lifo" value="false" />
    </bean>
</beans>
